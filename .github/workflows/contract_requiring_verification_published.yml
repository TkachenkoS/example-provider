name: contract_requiring_verification_published

on:
  repository_dispatch:
    types:
      - contract_requiring_verification_published
  workflow_dispatch:
    inputs:
      PACT_URL:
        description: URL of pact to verify
        required: true

env:
  PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_BASE_URL }}
  PACT_BROKER_TOKEN: ${{ secrets.PACTFLOW_TOKEN_FOR_CI }}
  PACT_BROKER_PUBLISH_VERIFICATION_RESULTS: true
  GIT_COMMIT: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  PACT_URL: ${{ github.event.client_payload.pact_url }}

jobs:
  verify-contract-requiring-verification:
    runs-on: ubuntu-latest
    steps:
      - name: checkout default branch if user manually provides pact URL
        uses: actions/checkout@v3
        if: ${{ github.event.inputs.PACT_URL }}
      - name: checkout specific SHA if webhook providers pact URL
        uses: actions/checkout@v3
        if: ${{ github.event.client_payload.pact_url }}
        with:
          ref: ${{env.GIT_COMMIT}}
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '6.0.x'
      - run: docker pull pactfoundation/pact-cli:latest
      - name: ${{env.DESCRIPTION}}
        run: make ci_webhook

    # Runs on branches as well, so we know the status of our PRs
  can-i-deploy:
    runs-on: ubuntu-latest
    needs: verify-contract-requiring-verification
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: Can I deploy?
        run: GIT_BRANCH=${GITHUB_REF:11} make can_i_deploy

  # Only deploy from main
  deploy:
    runs-on: ubuntu-latest
    needs: can-i-deploy
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: Deploy
        run: GIT_BRANCH=${GITHUB_REF:11} make deploy
        if: github.ref == 'refs/heads/master'



      #   name: checkout default branch if user manually provides pact URL
      #   uses: actions/checkout@v3
      #   if: ${{ github.event.inputs.PACT_URL }}
      # - name: checkout specific SHA if webhook providers pact URL
      #   uses: actions/checkout@v3
      #   if: ${{ github.event.client_payload.pact_url }}
      #   with:
      #     ref: ${{env.GIT_COMMIT}}
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: '16'
      # - run: docker pull pactfoundation/pact-cli:latest
      # - name: Install
      #   run: npm i
      # - name: ${{env.DESCRIPTION}}
      #   run: make ci_webhook
